{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","helpers/GetGifs.js","hooks/useFetchGifs.js","components/GifGrid.js","views/GifExpertApp.js","index.js"],"names":["AddCategory","func","useState","inputText","setText","onSubmit","e","preventDefault","trim","length","state","type","name","id","onChange","target","value","GifGridItem","alt","url","className","src","getGifs","category","a","fetchUrl","encodeURI","fetch","resp","json","data","map","img","title","images","downsized_medium","useFetchGifs","loading","setState","useEffect","then","GifGrid","GifExpertApp","categories","setCategories","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4MAgCeA,EA9BK,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAAW,EACHC,mBAAS,IADN,mBACzBC,EADyB,KACdC,EADc,KAahC,OACE,sBAAMC,SAPa,SAACC,GACpBA,EAAEC,iBACFJ,EAAUK,OAAOC,OAAS,GAAKR,GAAK,SAACS,GAAD,OAAYP,GAAZ,mBAA0BO,OAC9DN,EAAQ,KAIR,SACE,uBACEO,KAAK,OACLC,KAAK,WACLC,GAAG,WACHC,SAhBe,SAACR,GACpBF,EAAQE,EAAES,OAAOC,QAgBbA,MAAOb,OCXAc,EATK,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,IAAKC,EAAU,EAAVA,IAC1B,OACE,0BAASC,UAAU,yCAAnB,UACE,qBAAKC,IAAKF,EAAKD,IAAKA,IACpB,mBAAGE,UAAU,QAAb,SAAsBF,Q,uBCNfI,EAAO,uCAAG,WAAOC,GAAP,qBAAAC,EAAA,6DACfC,EADe,iDACsCC,UACzDH,GAFmB,+DAIFI,MAAMF,GAJJ,cAIfG,EAJe,gBAKEA,EAAKC,OALP,uBAKbC,EALa,EAKbA,KALa,kBAMdA,EAAKC,KAAI,SAACC,GAAD,MAAU,CACxBnB,GAAImB,EAAInB,GACRoB,MAAOD,EAAIC,MACXd,IAAKa,EAAIE,OAAOC,iBAAiBhB,SATd,2CAAH,sDCoBLiB,EAjBM,SAACb,GAAc,IAAD,EACPrB,mBAAS,CACjC4B,KAAM,GACNO,SAAS,IAHsB,mBAC1B3B,EAD0B,KACnB4B,EADmB,KAcjC,OARAC,qBAAU,WACRjB,EAAQC,GAAUiB,MAAK,SAACV,GAAD,OACrBQ,EAAS,CACPR,KAAMA,EACNO,SAAS,SAGZ,CAACd,IACGb,GCKM+B,EAlBC,SAAC,GAAkB,IAAhBlB,EAAe,EAAfA,SAAe,EACNa,EAAab,GAA/Bc,EADwB,EACxBA,QAASP,EADe,EACfA,KACjB,OACE,oCACE,6BAAKP,IACJc,EACC,oBAAIjB,UAAU,mCAAd,0BAEA,yBAASA,UAAU,aAAnB,SACGU,EAAKC,KAAI,gBAAGlB,EAAH,EAAGA,GAAIoB,EAAP,EAAOA,MAAOd,EAAd,EAAcA,IAAd,OACR,cAAC,EAAD,CAAsBD,IAAKe,EAAOd,IAAKA,GAArBN,YCSf6B,EAnBM,WAAO,IAAD,EACWxC,mBAAS,CAAC,UADrB,mBAClByC,EADkB,KACNC,EADM,KAGzB,OACE,qCACE,8CACA,cAAC,EAAD,CAAa3C,KAAM2C,IACnB,uBACA,kCACE,6BACGD,EAAWZ,KAAI,SAACR,GAAD,OACd,cAAC,EAAD,CAASA,SAAUA,GAAeA,cCV9CsB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.f5eb0005.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nconst AddCategory = ({ func }) => {\n  const [inputText, setText] = useState(\"\");\n\n  const handleChange = (e) => {\n    setText(e.target.value);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    inputText.trim().length > 0 && func((state) => [inputText, ...state]);\n    setText(\"\");\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <input\n        type=\"text\"\n        name=\"category\"\n        id=\"category\"\n        onChange={handleChange}\n        value={inputText}\n      />\n    </form>\n  );\n};\n\nAddCategory.propTypes = {\n  func: PropTypes.func.isRequired,\n};\n\nexport default AddCategory;\n","import React from \"react\";\n\nconst GifGridItem = ({ alt, url }) => {\n  return (\n    <article className=\"card animate__animated animate__fadeIn\">\n      <img src={url} alt={alt} />\n      <p className=\"title\">{alt}</p>\n    </article>\n  );\n};\n\nexport default GifGridItem;\n","export const getGifs = async (category) => {\n  const fetchUrl = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(\n    category\n  )}&limit=10&api_key=66ATDnouzCZjgxnHcxBaTHGHTbO9lvof`;\n  const resp = await fetch(fetchUrl);\n  const { data } = await resp.json();\n  return data.map((img) => ({\n    id: img.id,\n    title: img.title,\n    url: img.images.downsized_medium.url,\n  }));\n};\n","import { useState, useEffect } from \"react\";\nimport { getGifs } from \"../helpers/GetGifs\";\n\nconst useFetchGifs = (category) => {\n  const [state, setState] = useState({\n    data: [],\n    loading: true,\n  });\n\n  useEffect(() => {\n    getGifs(category).then((data) =>\n      setState({\n        data: data,\n        loading: false,\n      })\n    );\n  }, [category]);\n  return state;\n};\n\nexport default useFetchGifs;\n","import React from \"react\";\nimport GifGridItem from \"./GifGridItem\";\nimport useFetchGifs from \"../hooks/useFetchGifs\";\n\nconst GifGrid = ({ category }) => {\n  const { loading, data } = useFetchGifs(category);\n  return (\n    <section>\n      <h3>{category}</h3>\n      {loading ? (\n        <h4 className=\"animate__animated animate__flash\">Cargando ...</h4>\n      ) : (\n        <article className=\"card-grid \">\n          {data.map(({ id, title, url }) => (\n            <GifGridItem key={id} alt={title} url={url} />\n          ))}\n        </article>\n      )}\n    </section>\n  );\n};\n\nexport default GifGrid;\n","import React, { useState } from \"react\";\nimport AddCategory from \"../components/AddCategory\";\nimport GifGrid from \"../components/GifGrid\";\n\nconst GifExpertApp = () => {\n  const [categories, setCategories] = useState([\"React\"]);\n\n  return (\n    <>\n      <h2>GifExpertAPP</h2>\n      <AddCategory func={setCategories} />\n      <hr />\n      <article>\n        <ol>\n          {categories.map((category) => (\n            <GifGrid category={category} key={category} />\n          ))}\n        </ol>\n      </article>\n    </>\n  );\n};\n\nexport default GifExpertApp;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport GifExpertApp from \"./views/GifExpertApp\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <GifExpertApp />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}